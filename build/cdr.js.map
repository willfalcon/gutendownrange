{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/application-form.js","assets/js/cdr.js","assets/js/navbar.js","assets/js/navbarDropdown.js","assets/js/processBullets.js"],"names":[],"mappingsjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cdr.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","module.exports = () => {\n  function addRow(date) {\n    // param 'date': single custom post type object from wp api\n\n    // get the list field where the camp date options go\n    const datesElem = document.querySelector('tbody.ui-sortable');\n    const dateRow = datesElem.querySelector('tr:last-child');\n    const dateRowInput = dateRow.querySelector('input');\n\n    // copy the last list item that's already there, fill in the camp date title, and stick it in.\n    const newRow = dateRow.cloneNode(true);\n    const newRowInput = newRow.querySelector('input');\n    const addButtons = newRow.querySelector('.gfield_list_icons');\n\n    newRowInput.value = date.title.rendered;\n    newRowInput.setAttribute('readonly', 'true');\n    datesElem.appendChild(newRow);\n\n    // if the item we copied was the empty placeholder, remove it.\n    if (dateRowInput.value == \"\") {\n      datesElem.removeChild(dateRow);\n      // console.log('removed one item');\n    }\n  }\n\n  const appForm = document.querySelector('[data-app-for]');\n\n  if (appForm) {\n    const ageGroupField = document.querySelector('.gfield.age-group .gfield_select');\n    const appFor = appForm.dataset.appFor;\n    if (ageGroupField) {\n      ageGroupField.addEventListener('change', e => {\n        console.log(e);\n        // remove any existing campDate rows, except one, since we need it to make the new ones\n        const datesElem = document.querySelector('tbody.ui-sortable');\n        const allDateRows = datesElem.querySelectorAll('tr:not(:last-child)');\n        allDateRows.forEach(dateRow => datesElem.removeChild(dateRow));\n        // remove this one's value so it'll be removed later\n        const lastDateRowStanding = datesElem.querySelector('tr');\n        lastDateRowStanding.querySelector('input').value = \"\";\n\n        // get the value of the age group selection (the id of the tax term)\n        const termId = e.target.value;\n        // get all the camp dates\n        const endpoint = 'http://www.camp-down-range.org/wp-json/wp/v2/camp_dates?filter[camp_type]=' + appFor;\n        console.log(endpoint);\n        fetch(endpoint)\n          .then(response => response.json())\n          .then(campDates => {\n\n            campDates.forEach(date => {\n              console.log(date);\n              // if the camp date includes the age group that was selected, show it\n              date.age_group.forEach(groupId => {\n                if (groupId == termId) {\n                  addRow(date);\n                }\n              });\n\n            });\n\n        });\n\n      });\n    }\n\n    function numberWithCommas(x) {\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    // Add a slider that populates the household income number field.\n\n    const incomeContainer = document.querySelector('.household-income .ginput_container_number');\n    if (incomeContainer) {\n      const incomeField = document.querySelector('.household-income .ginput_container_number input');\n      // Create the slider.\n      const incomeSlider = document.createElement('INPUT');\n      incomeSlider.setAttribute('type', 'range');\n      incomeSlider.setAttribute('id', 'incomeSlider');\n      incomeSlider.classList.add('income-slider');\n      incomeSlider.setAttribute('min', '40000');\n      incomeSlider.setAttribute('max', '150000');\n      incomeSlider.setAttribute('step', '1000');\n      incomeSlider.setAttribute('value', '40000');\n      // Insert the slider.\n      incomeContainer.appendChild(incomeSlider);\n      // Make the income field read-only.\n      incomeField.setAttribute('readonly', 'true');\n      incomeField.classList.add('income-field');\n      incomeField.setAttribute('value', '$' + numberWithCommas(40000));\n\n      // When slider is changed, update the income field's value and the cost.\n\n      // Get the cost field.\n      const costField = document.querySelector('.gfield.cost .ginput_container_number input');\n\n      costField.setAttribute('readonly', 'true');\n\n      function updateCost() {\n        let cost;\n        if (incomeSlider.value < 50000) {\n          cost = 50;\n        } else if (incomeSlider.value < 75000 && incomeSlider.value >= 50000) {\n          cost = 150;\n        } else if (incomeSlider.value < 100000 && incomeSlider.value >= 75000) {\n          cost = 250;\n        } else if (incomeSlider.value < 125000 && incomeSlider.value >= 100000) {\n          cost = 350;\n        } else if (incomeSlider.value >= 125000) {\n          cost = 450;\n        }\n        costField.value = '$' + cost.toString();\n      }\n\n      function updateIncome() {\n        incomeField.value = '$' + numberWithCommas(incomeSlider.value);\n        updateCost();\n      }\n      incomeSlider.addEventListener('change', updateIncome);\n      incomeSlider.addEventListener('mousemove', updateIncome);\n\n    }\n\n  }\n}\n","const navbar = require('./navbar.js');\nconst navbarDropdown = require('./navbarDropdown.js');\nconst processBullets = require('./processBullets.js');\nconst appForm = require('./application-form.js');\n\nnavbar();\nnavbarDropdown();\nprocessBullets();\nappForm();\n\nwindow.addEventListener('resize', processBullets, false);\n\n\nfunction isInViewport(el) {\n\n    //special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && el instanceof jQuery) {\n        el = el[0];\n    }\n\n    var rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n    );\n}\n\nvar slideDown = document.querySelectorAll('.slide-down');\nvar slideRight = document.querySelectorAll('.slide-right');\n\nfunction tryToSlide() {\n\n  slideDown.forEach(item => {\n    if (isInViewport(item)) {\n      item.classList.add('show');\n    }\n  });\n\n  slideRight.forEach(item => {\n    if (isInViewport(item)) {\n      item.classList.add('show');\n    }\n  });\n\n}\n\nwindow.addEventListener('scroll', tryToSlide, false);\n\ntryToSlide();\n\n\n\n\n\nfunction setCookie(cname, cvalue, hours) {\n  // Sets a cookie. Any cookie really, but for the purposes of the alert bar,\n  // it gets the current date, adds 24 hours to it, then sets the cookie name \"alertClosed\"\n  // to \"true\", sets expiration to 24 hours from now, and sets the path to \"/\",\n  // which makes the cookie apply to all pages on the domain.\n  var d = new Date();\n  d.setTime(d.getTime() + (hours * 24 * 60 * 60 * 1000));\n  var expires = \"expires=\"+d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nfunction getCookie(cname) {\n  // Explaination copied from w3schools: (https://www.w3schools.com/js/js_cookies.asp)\n  // Take the cookiename as parameter (cname).\n  // Create a variable (name) with the text to search for (cname + \"=\").\n  // Decode the cookie string, to handle cookies with special characters, e.g. '$'\n  // Split document.cookie on semicolons into an array called ca (ca = decodedCookie.split(';')).\n  // Loop through the ca array (i = 0; i < ca.length; i++), and read out each value c = ca[i]).\n  // If the cookie is found (c.indexOf(name) == 0), return the value of the cookie (c.substring(name.length, c.length).\n  // If the cookie is not found, return \"\".\n  var name = cname + \"=\";\n  var ca = document.cookie.split(';');\n  for(var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\n  function checkCookie() {\n    // run getCookie to see if the cookie has been set or not.\n    // Returns the value of the cookie if set, or \"\" if not set.\n    var closed = getCookie(\"alertClosed\");\n    if (closed != \"true\") {\n      var alert = document.querySelector('.alert');\n      alert.style.height = '75px';\n      alert.style.marginBottom = '10px';\n      alert.style.padding = '1rem';\n    }\n  }\n\n    function removeAlert(e) {\n      e.target.removeEventListener('transitionend', removeAlert);\n      e.target.parentNode.removeChild(alert);\n    }\n\n    function hideAlert(alert) {\n      alert.addEventListener('transitionend', removeAlert);\n      alert.style.height = '0px';\n      alert.style.marginBottom = '0px';\n      alert.style.padding = '0rem';\n    }\n    var alertClose = document.querySelector('.alert__dismiss');\n    var alertButton = document.querySelector('.alert__button');\n\n    if (alertClose) {\n      alertClose.addEventListener('click', function() {\n        var alert = alertClose.parentNode;\n        hideAlert(alert);\n        setCookie('alertClosed', 'true', 24);\n      });\n    }\n    if (alertButton) {\n      alertButton.addEventListener('click', function() {\n        setCookie('alertClosed', 'true', 24);\n      });\n    }\n\n\n  // ALERT BAR FUNCTIONALITY //\n  if (document.querySelector('.alert')) {\n    checkCookie();\n  }\n  // When the alert bar is activated, we only want users to have to dismiss it once,\n  // so when it's dismissed, we set a very simple cookie that expires in 24 hours.\n  // ('alertClosed=true')\n  // Function checkCookie (above, inside jQuery(document).ready) runs a function getCookie(cname)\n  // which checks whether the cookie we need has been set.\n  // If not, checkCookie runs the setTimeout function, which will trigger the\n  // alert to appear after the specified amout of time.\n  //\n  // Also below is a click listener on the alert's close button which runs a function\n  // setCookie(cname, cvalue, hours), which does exactly what you think it does.\n","module.exports = () => {\n  var toggler = document.getElementById('navbarToggler');\n  toggler.onclick = function() {\n    var nav = document.getElementById('main_nav');\n    var toggleTR = document.getElementById('toggleTR');\n    var toggleTL = document.getElementById('toggleTL');\n    var toggleBR = document.getElementById('toggleBR');\n    var toggleBL = document.getElementById('toggleBL');\n    var logoDark = document.getElementById('logoDark');\n    var logoLight = document.getElementById('logoLight');\n    if ( toggler.classList.contains('open') ) {\n      nav.style.transform = 'translateY(-100%)';\n      toggler.classList.remove('open');\n      toggler.setAttribute('aria-expanded', false);\n      toggleTR.setAttribute('fill', '#478E41');\n      toggleTL.setAttribute('fill', '#478E41');\n      toggleBR.setAttribute('fill', '#478E41');\n      toggleBL.setAttribute('fill', '#478E41');\n      logoLight.style.opacity = '0';\n      logoDark.style.opacity = '1';\n    } else {\n      nav.style.transform = 'translateY(0)';\n      toggler.classList.add('open');\n      toggler.setAttribute('aria-expanded', true);\n      toggleTR.setAttribute('fill', 'white');\n      toggleTL.setAttribute('fill', 'white');\n      toggleBR.setAttribute('fill', 'white');\n      toggleBL.setAttribute('fill', 'white');\n      logoLight.style.opacity = '1';\n      logoDark.style.opacity = '0';\n    }\n  };\n}\n","module.exports = () => {\n\n\n    //** Drop-Down Sub-Menu Voodoo **//\n\n    // Put the Imperius Curse on the menu on document ready so we can bend it to our will later.\n\n    // Get all menu items with sub menu items.\n    const menuParents = document.querySelectorAll('.menu-item-has-children'); // querySelectorAll has support back to ie9\n\n    // Iterate over those menu items with child sub menus with an index.\n    let i = 0;\n    menuParents.forEach((parent) => {\n      // Each 'parent' here is a primary <li> with class .menu-item-has-children\n      //    The <li> 'parent' will have 2 children\n      //    at index[0], the <a> link to the parent page\n      //    at index[1], a <ul> with class .sub-menu containing the child menu\n      //\n      // Add the caret to the <a> element html inside the <li>\n      const childLink = parent.querySelector('a');\n      const childMenu = parent.querySelector('ul');\n      childLink.innerHTML += ' <i id=subMenuCaret' + i + ' class=\"fa fa-caret-right\"></i>';\n      // Add class 'parent' to the <li> item\n      parent.classList.add('parent');\n      // Add data-child attribute to the <li> item to target the correct sub-menu\n      parent.setAttribute('data-child', 'sub_menu_' + i);\n      // Add an id to the child <ul> sub-menu matching the data-child attr of the parent.\n      childMenu.setAttribute('id', 'sub_menu_' + i);\n      // Get the natural height of the element and store as a data attr for later.\n      // var subMenu = document.getElementById('sub_menu_' + i);\n      const height = window.getComputedStyle(childMenu)['height'];\n      // var caret = document.getElementById('subMenuCaret' + i);\n      childMenu.setAttribute('data-height', height);\n      // collapse menu only if we're mobile.\n      if (document.documentElement.clientWidth < 768) {\n        childMenu.style.height = 0;\n        childMenu.style.opacity = 0;\n        childMenu.style.display = 'none';\n        childLink.setAttribute('data-index', i);\n        childLink.addEventListener('click', function(e) {\n          e.preventDefault();\n          const index = this.getAttribute('data-index');\n          console.log(index);\n          const caret = childLink.querySelector('i');\n          if ( childMenu.classList.contains('open') ) {\n            childMenu.classList.remove('open');\n            childMenu.style.height = 0;\n            childMenu.style.opacity = 0;\n            caret.style.transform = 'rotate(0)';\n            setTimeout(function() {\n              childMenu.style.display = 'none';\n            },250);\n          } else {\n            childMenu.classList.add('open');\n            childMenu.style.display = 'block';\n            caret.style.transform = 'rotate(90deg)';\n            setTimeout(function() {\n              childMenu.style.height = childMenu.getAttribute('data-height');\n              childMenu.style.opacity = 1;\n            },0);\n          }\n        });\n\n      }\n\n      i++;\n      // Mischief managed\n    });\n\n\n    // Time to do some magic on those sub-menus\n    // var menuParents = document.querySelectorAll('.menu-item-has-children'); // (already did this)\n    // Iterate over those menu items with child sub menus.\n    for (var parent of menuParents) {\n\n      parent.addEventListener('mouseenter', function() {\n\n        var child = document.getElementById(this.getAttribute('data-child'));\n        child.classList.add('show');\n\n        function addFlip(i) {\n          child.children[i].classList.add('flip');\n        }\n\n        for (i=0;i<child.children.length;i++) {\n\n          setTimeout(addFlip, i * 80, i);\n\n        }\n\n      });\n\n\n      parent.addEventListener('mouseleave', function() {\n        var child = document.getElementById(this.getAttribute('data-child'));\n\n        function removeFlip(i) {\n          child.children[i].classList.remove('flip');\n        }\n\n        for (i=(child.children.length-1);i>=0;i--) {\n\n          setTimeout(removeFlip, (child.children.length - 1 - i) * 80, i);\n        }\n        setTimeout(function() {\n          child.classList.remove('show');\n        }, child.children.length *80);\n\n\n      });\n    }\n\n}\n","module.exports = () => {\n  var lastElement = false;\n  jQuery(\"br\").remove(\".tempbreak\");\n  jQuery(\".sponsors__list li\").each(function() {\n      jQuery(this).removeClass(\"nobullet\");\n      if (lastElement && lastElement.offset().top != jQuery(this).offset().top) {\n          jQuery(lastElement).addClass(\"nobullet\");\n          jQuery(lastElement).append('<br class=\"tempbreak\" />');\n      }\n      lastElement = jQuery(this);\n  }).last().addClass(\"nobullet\");\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}